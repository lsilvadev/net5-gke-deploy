name: Tag and Publish on Test
on:
  workflow_dispatch:
    inputs:
      versionNumber:
        description: "Version Number"
        required: true
        default: "minor"
        type: choice
        options:
          - major
          - minor
          - patch

jobs:
  cicd:
    name: Release golang-cicd App
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [ linux ]
        goarch: [ amd64 ]
    env:
      REPOSITORY_HOST: "https://api.github.com/repos/lsilvadev/net5-gke-deploy"
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Install JQ
        run: sudo apt-get update -y && sudo apt-get install jq -y

      - name: Not exists prerelease
        run: |
          curl -X GET -H "Authorization: token $GITHUB_TOKEN" "$REPOSITORY_HOST/releases" \
          | jq -r 'map(select(.prerelease)) | first | .tag_name' \
          | grep "[^null]" && exit 1 || exit 0

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SA_TOKEN }}
          repository: jonascavalcantineto/xversioner
          path: xversioner-git

      - name: Get latest version
        id: latest_version
        run: |
          echo ::set-output name=value::$( \
            curl -X POST 'https://api.github.com/graphql' \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H 'Content-Type: application/json' \
              -d '{"query":"query {repository(owner: \"lsilvadev\", name: \"net5-gke-deploy\") { latestRelease { tagName } } }" }' \
            | grep -o 'v[^"]*'
          )

      - uses: google-github-actions/setup-gcloud@v0
        with:
          version: "275.0.0"
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}

      - name: Set up gcloud dev
        run: gcloud config set project ${{ secrets.PROJECT }}

      - name: Increment application version
        id: new_version
        shell: bash
        run: |
          echo "Increment Version Number: $VERSION_NUMBER"
          cp xversioner-git/xversioner-linux-amd64 xversioner && chmod +x xversioner
          echo ::set-output name=value::$( ./xversioner update --version $CURRENT_VERSION -i $VERSION_NUMBER )
        env:
          CURRENT_VERSION: ${{ steps.latest_version.outputs.value }}
          VERSION_NUMBER: ${{ github.event.inputs.versionNumber }}

      - name: To copy an image and add a new tag
        run: |
          gcloud container images add-tag \
            gcr.io/${{ secrets.PROJECT }}/${{ secrets.GCP_IMAGE }}:develop \
            gcr.io/${{ secrets.PROJECT }}/${{ secrets.GCP_IMAGE }}:v$VERSION
        env:
          VERSION: ${{ steps.new_version.outputs.value }}

      - name: Create tag and github prerelease
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ env.GITHUB_TOKEN }}
          tag_name: v${{ steps.new_version.outputs.value }}
          name: Release v${{ steps.new_version.outputs.value }}
          generate_release_notes: true
          draft: false
          prerelease: true
